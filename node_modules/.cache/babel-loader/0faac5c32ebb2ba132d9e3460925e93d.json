{"ast":null,"code":"var _jsxFileName = \"/Users/jesseboon/Documents/ma/leerjaar 3/periode 1/react/dashboard/src/components/Dashboard/Dashboard.js\";\nimport LeftPane from \"../LeftPane/LeftPane\";\nimport RightPane from \"../RightPane/Rightpane\";\nimport \"./Dashboard.css\";\nimport navigationItems from \"../../data/navigationItems\";\nimport productsObject from \"../../data/Products\";\nimport navigationItemsObject from \"../../data/navigationItems\";\nimport Popup from \"../Popup/Popup\";\nimport chooseImage from \"../../helpers/chooseImage\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.addButtonClicked = inputfromPopup => {\n      let imageFromHelper = chooseImage(inputfromPopup);\n      let toBEAdded = [{\n        id: this.state.productCards.length + 1,\n        name: inputfromPopup,\n        img: imageFromHelper\n      }];\n      let mergedArrays = this.state.productCards.concat(toBEAdded);\n      this.setState({\n        productCards: mergedArrays,\n        open: !this.state.open\n      });\n    };\n    this.onButtonClicked = () => {\n      this.setState({\n        open: !this.state.open\n      });\n    };\n    this.editButtonClicked = inputfromPopup => {\n      let productCards = this.state.productCards;\n      let newState = productCards.map(product => {\n        if (this.state.cardClicked.id === product.id) {\n          product.name = \"aangepast\";\n        } else {\n          return product;\n        }\n      });\n    };\n    this.onCardClicked = idFromcard => {\n      if (this.state.productCards[idFromcard - 1].name === \"Placeholder\") {\n        this.setState({\n          editMode: false\n        });\n      } else {\n        this.setState({\n          editMode: true\n        });\n      }\n      this.setState({\n        open: !this.state.open,\n        cardClicked: this.state.productCards[idFromcard - 1]\n      });\n    };\n    this.state = {\n      productCards: [],\n      open: true,\n      cardClicked: {},\n      editMode: false\n    };\n  }\n  componentDidMount() {\n    this.setState({\n      productCards: productsObject.products\n    });\n  }\n  render() {\n    if (this.state.open === true) {\n      return /*#__PURE__*/_jsxDEV(\"article\", {\n        className: \"dashboard\",\n        children: [/*#__PURE__*/_jsxDEV(LeftPane, {\n          navigationListItems: navigationItemsObject.navigationItems,\n          buttonText: \"Go Premium\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(RightPane, {\n          onProductCardClicked: this.onCardClicked,\n          onButtonClicked: this.onButtonClicked,\n          productCards: this.state.productCards,\n          headerText: \"Mijn Producten\",\n          buttonSymbol: \"+\",\n          butttonText: \"Voeg product toe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }, this);\n    }\n    ;\n    return /*#__PURE__*/_jsxDEV(Popup, {\n      editButtonClicked: this.editButtonClicked,\n      editMode: this.state.editMode,\n      cardClicked: this.state.cardClicked,\n      addButtonClicked: this.addButtonClicked\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default Dashboard;","map":{"version":3,"names":["LeftPane","RightPane","navigationItems","productsObject","navigationItemsObject","Popup","chooseImage","React","Dashboard","Component","constructor","props","addButtonClicked","inputfromPopup","imageFromHelper","toBEAdded","id","state","productCards","length","name","img","mergedArrays","concat","setState","open","onButtonClicked","editButtonClicked","newState","map","product","cardClicked","onCardClicked","idFromcard","editMode","componentDidMount","products","render"],"sources":["/Users/jesseboon/Documents/ma/leerjaar 3/periode 1/react/dashboard/src/components/Dashboard/Dashboard.js"],"sourcesContent":["import LeftPane from \"../LeftPane/LeftPane\";\nimport RightPane from \"../RightPane/Rightpane\";\nimport \"./Dashboard.css\";\nimport navigationItems from \"../../data/navigationItems\";\nimport productsObject from \"../../data/Products\"\nimport navigationItemsObject from \"../../data/navigationItems\";\nimport Popup from \"../Popup/Popup\";\nimport chooseImage from \"../../helpers/chooseImage\";\nimport React from \"react\";\n\n\n\n\nclass Dashboard extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            productCards: [],\n            open: true,\n            cardClicked: {},\n            editMode: false,\n        }\n    }\n\n\n    addButtonClicked = (inputfromPopup) => {\n        let imageFromHelper = chooseImage(inputfromPopup);\n\n        let toBEAdded = [\n            {\n                id: this.state.productCards.length + 1,\n                name: inputfromPopup,\n                img: imageFromHelper\n            }\n        ]\n        let mergedArrays = this.state.productCards.concat(toBEAdded);\n        this.setState({\n            productCards: mergedArrays,\n            open: !this.state.open,\n        });\n    }\n    onButtonClicked = () => {\n        this.setState({ open: !this.state.open })\n    }\n\n    editButtonClicked = (inputfromPopup) => {\n\n     let productCards = this.state.productCards;\n      let newState = productCards.map(product => {\n        if(this.state.cardClicked.id === product.id){\n            product.name = \"aangepast\"\n        }\n        else{\n           return product;\n        }\n     })\n\n    }\n\n\n    onCardClicked = (idFromcard) => {\n        if (this.state.productCards[idFromcard - 1].name === \"Placeholder\") {\n            this.setState({\n                editMode: false,\n            })\n\n        }\n        else {\n            this.setState({\n                editMode: true,\n            })\n        }\n\n        this.setState\n            (\n                {\n\n                    open: !this.state.open,\n                    cardClicked: this.state.productCards[idFromcard - 1],\n\n                }\n            )\n    }\n\n    componentDidMount() {\n\n        this.setState({ productCards: productsObject.products })\n    };\n\n    render() {\n\n\n        if (this.state.open === true) {\n            return (<article className=\"dashboard\">\n                <LeftPane navigationListItems={navigationItemsObject.navigationItems} buttonText=\"Go Premium\" />\n                <RightPane onProductCardClicked={this.onCardClicked} onButtonClicked={this.onButtonClicked} productCards={this.state.productCards} headerText={\"Mijn Producten\"} buttonSymbol=\"+\" butttonText={\"Voeg product toe\"} />\n            </article>\n            );\n        };\n\n        return (\n            <Popup editButtonClicked={this.editButtonClicked} editMode={this.state.editMode} cardClicked={this.state.cardClicked} addButtonClicked={this.addButtonClicked} />\n        )\n    }\n\n\n\n}\nexport default Dashboard"],"mappings":"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"},"metadata":{},"sourceType":"module"}